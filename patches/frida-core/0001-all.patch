From f341872a0942a456591d88da070b4da3e79e73df Mon Sep 17 00:00:00 2001
From: 456vv <123@456vv.com>
Date: Sat, 2 Nov 2024 17:10:24 +0800
Subject: [PATCH] all

---
 server/server.vala                  |  3 +-
 src/anti-anti-frida.py              | 56 +++++++++++++++++++++++++++++
 src/droidy/droidy-client.vala       |  2 +-
 src/frida-glue.c                    |  1 +
 src/linux/frida-helper-backend.vala |  2 +-
 5 files changed, 61 insertions(+), 3 deletions(-)
 create mode 100644 src/anti-anti-frida.py

diff --git a/server/server.vala b/server/server.vala
index 525c145..97d0905 100644
--- a/server/server.vala
+++ b/server/server.vala
@@ -1,7 +1,7 @@
 namespace Frida.Server {
 	private static Application application;
 
-	private const string DEFAULT_DIRECTORY = "re.frida.server";
+	private string DEFAULT_DIRECTORY = null;
 	private static bool output_version = false;
 	private static string? listen_address = null;
 	private static string? certpath = null;
@@ -50,6 +50,7 @@ namespace Frida.Server {
 	};
 
 	private static int main (string[] args) {
+		DEFAULT_DIRECTORY = GLib.Uuid.string_random();
 		Environment.init ();
 
 #if DARWIN
diff --git a/src/anti-anti-frida.py b/src/anti-anti-frida.py
new file mode 100644
index 0000000..78cbf08
--- /dev/null
+++ b/src/anti-anti-frida.py
@@ -0,0 +1,56 @@
+import sys
+import lief
+import random
+import os
+import string
+
+if __name__ == "__main__":
+    input_file = sys.argv[1]
+    print(f"[*] Patch frida-agent: {input_file}")
+
+    print(f"[*] random.seed({RANDOM_SEED})")
+    random.seed({RANDOM_SEED})
+    random_name = "".join(random.sample(string.ascii_lowercase+string.ascii_uppercase, 5))
+    print(f"[*] Patch `frida` to `{random_name}``")
+
+    binary = lief.parse(input_file)
+
+    if not binary:
+        print(f"file does not exist {input_file}")
+        exit()
+
+    for symbol in binary.symbols:
+        if symbol.name == "frida_agent_main":
+            #symbol.name = "{FRIDA_PREFIX}_agent_main"
+
+        if "frida" in symbol.name:
+            #symbol.name = symbol.name.replace("frida", random_name)
+
+        if "FRIDA" in symbol.name:
+            #symbol.name = symbol.name.replace("FRIDA", random_name)
+
+    for section in binary.sections:
+        if section.name == ".text":
+            for patch_str in []: #放入 .text 节的相关过滤字符串
+                for addr in section.search_all(patch_str):
+                    random_name_ = "".join(random.sample(string.ascii_lowercase+string.ascii_uppercase, len(patch_str)))
+                    binary.patch_address(section.file_offset+addr, [ord(n) for n in random_name_])
+            continue
+        if section.name == ".rodata":
+            for patch_str in []: #放入 .rodata 节的相关过滤字符串
+                for addr in section.search_all(patch_str):
+                    random_name_ = "".join(random.sample(string.ascii_lowercase+string.ascii_uppercase, len(patch_str)))
+                    binary.patch_address(section.file_offset+addr, [ord(n) for n in random_name_])
+            continue
+        if section.name != ".rodata":
+            for patch_str in []:# 放入非 .rodata 节的相关过滤字符串，如： "FridaScriptEngine", "GLib-GIO", "GDBusProxy", "GumScript"
+               for addr in section.search_all(patch_str):
+                   binary.patch_address(section.file_offset + addr, [ord(n) for n in list(patch_str)[::-1]])
+
+    binary.write(input_file)
+
+    for i in []: # 相关字符："gum-js-loop", "gmain", "gdbus"
+        random_name = "".join(random.sample(string.ascii_lowercase+string.ascii_uppercase, len(i)))
+        print(f"[*] Patch `{i}` to `{random_name}`")
+        os.system(f"sed -b -i s/{i}/{random_name}/g {input_file}")
+        print(f'sed -b -i s/{i}/{random_name}/g {input_file}')
diff --git a/src/droidy/droidy-client.vala b/src/droidy/droidy-client.vala
index ddc56cc..c3464e7 100644
--- a/src/droidy/droidy-client.vala
+++ b/src/droidy/droidy-client.vala
@@ -1015,7 +1015,7 @@ namespace Frida.Droidy {
 						case "OPEN":
 						case "CLSE":
 						case "WRTE":
-							throw new Error.PROTOCOL ("Unexpected command");
+							break; // throw new Error.PROTOCOL ("Unexpected command");
 
 						default:
 							var length = parse_length (command_or_length);
diff --git a/src/frida-glue.c b/src/frida-glue.c
index ee8f073..678829a 100644
--- a/src/frida-glue.c
+++ b/src/frida-glue.c
@@ -40,6 +40,7 @@ frida_init_with_runtime (FridaRuntime rt)
     g_io_module_openssl_register ();
 #endif
 
+	g_set_prgname ("{FRIDA_PREFIX}");
     if (runtime == FRIDA_RUNTIME_OTHER)
     {
       main_context = g_main_context_ref (g_main_context_default ());
diff --git a/src/linux/frida-helper-backend.vala b/src/linux/frida-helper-backend.vala
index ed84fc4..1efff27 100644
--- a/src/linux/frida-helper-backend.vala
+++ b/src/linux/frida-helper-backend.vala
@@ -3237,7 +3237,7 @@ namespace Frida {
 		}
 
 		private int memfd_create (string name, uint flags) {
-			return Linux.syscall (SysCall.memfd_create, name, flags);
+			return Linux.syscall (SysCall.memfd_create, "jit-cache", flags);
 		}
 	}
 
-- 
2.47.0.windows.2

